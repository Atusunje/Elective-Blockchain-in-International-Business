{
  "hash": "d8d08f246477ff4b1e6daf00f5fccb72",
  "result": {
    "markdown": "---\ntitle: \"Order of operations \\U0001F914\"\n---\n\nSee book [section](https://learning.oreilly.com/library/view/essential-math-for/9781098102920/ch01.html#idm45252818992512){target=\"_blank\"}\n\n\n```{=html}\n<div class=\"ratio ratio-16x9 m-5 w-75\">\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/lKpPyvRRvKs\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen>\n\n</iframe>\n</div>\n```\n\n**Mathematical Order of Operations**\n\nMathematical order of operations refers to the rules that dictate the sequence in which mathematical operations should be performed in an expression. These rules ensure that every mathematical expression is evaluated in a consistent and unambiguous manner. The order of operations is also known as \"PEMDAS\" which is an acronym representing the sequence of operations: Parentheses, Exponents, Multiplication and Division (from left to right), and Addition and Subtraction (from left to right).\n\nPython, along with many other programming languages, follows the standard order of operations used in mathematics. The order of operations is essential to obtain accurate and meaningful results. Let's break down each component of the order of operations and illustrate them with Python examples, including real-world scenarios.\n\n**1. Parentheses**\n\nParentheses are used to indicate which parts of an expression should be evaluated first. Expressions within parentheses are calculated before anything else.\n\n**Example 1: Simple Parentheses**\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nresult = (4 + 3) * 2\nprint(result)  # Output: 14 (since 4 + 3 = 7, and 7 * 2 = 14)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n14\n```\n:::\n:::\n\n\n**2. Exponents**\n\nExponents are mathematical operations that raise a base to a certain power.\n\n**Example 2: Exponents**\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nresult = 2 ** 3 + 4\nprint(result)  # Output: 12 (since 2 ** 3 = 8, and 8 + 4 = 12)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n12\n```\n:::\n:::\n\n\n**3. Multiplication and Division**\n\nThese operations are performed from left to right, whichever comes first in the expression.\n\n**Example 3: Multiplication and Division**\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nresult = 10 / 2 * 3\nprint(result)  # Output: 15 (since 10 / 2 = 5, and 5 * 3 = 15)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n15.0\n```\n:::\n:::\n\n\n**4. Addition and Subtraction**\n\nSimilarly, addition and subtraction are performed from left to right, whichever comes first in the expression.\n\n**Example 4: Addition and Subtraction**\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nresult = 8 - 3 + 2\nprint(result)  # Output: 7 (since 8 - 3 = 5, and 5 + 2 = 7)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n7\n```\n:::\n:::\n\n\n**Real-World Examples**\n\nLet's consider some real-world examples where understanding the order of operations is crucial:\n\n**Example 5: Shopping Calculations**\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\nprice_per_item = 5\ntax_rate = 0.08\nquantity = 3\n\ntotal_cost = price_per_item * quantity + (price_per_item * quantity) * tax_rate\nprint(total_cost)  # Output: 16.2 (5 * 3 = 15, 15 + 15 * 0.08 = 16.2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n16.2\n```\n:::\n:::\n\n\n**Example 6: Engineering Calculation**\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nimport math\n\nbase_length = 6.5 # a\nheight = 8.2 # b\n\nhypotenuse = math.sqrt(base_length ** 2 + height ** 2)\nprint(hypotenuse)  # Output: 10.463...\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n10.463746938836012\n```\n:::\n:::\n\n\n![](https://upload.wikimedia.org/wikipedia/commons/thumb/d/d2/Pythagorean.svg/1920px-Pythagorean.svg.png){width=\"300\"}\n\nIn the second example, we use the Pythagorean theorem to find the length of the hypotenuse in a right-angled triangle. The order of operations ensures that the squares and addition are performed before the square root operation.\n\n------------------------------------------------------------------------\n\n## Assignment {.unnumbered}\n\n**Basic:** Make a short video explaining how to calculate distances between two coordinates. Do proper research and use code demos.\n\n**Stretch:** Expand your video with an exploration of how to calculate the distance between geographical locations using their coordinates taking into account the curvature of the earth. Discuss and illustrate with code examples and maps. Provide a list of interesting resources on the matter.\n\n**Challenge:** Share your content online (e.g. Linkedin or Medium), gather feedback and write a reflection on it.\n\n",
    "supporting": [
      "orderofoperations_files"
    ],
    "filters": [],
    "includes": {}
  }
}