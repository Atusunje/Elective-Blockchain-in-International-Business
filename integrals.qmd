---
title: "Integrals ðŸ¤”"
jupyter: envpy39
---

See book [section](https://learning.oreilly.com/library/view/essential-math-for/9781098102920/ch01.html#idm45252818933376){target="_blank"}

<iframe width="560" height="315" src="https://www.youtube.com/embed/-QHff5pRdM8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen>

</iframe>

```{python}
def approximate_integral(a, b, n, f):
    delta_x = (b - a) / n
    total_sum = 0

    for i in range(1, n + 1):
        midpoint = 0.5 * (2 * a + delta_x * (2 * i - 1))
        total_sum += f(midpoint)

    return total_sum * delta_x

def my_function(x):
    return x**2 + 1

area = approximate_integral(a=0, b=1, n=5, f=my_function)

print(area) # prints 1.33
```

${f(x)={\frac {1}{\sigma {\sqrt {2\pi }}}}e^{-{\frac {1}{2}}\left({\frac {x-\mu }{\sigma }}\right)^{2}}}$

```{python}
from sympy import *
import math
import numpy as np

def approximate_integral(a, b, n, f):
    delta_x = (b - a) / n
    total_sum = 0

    for i in range(1, n + 1):
        midpoint = 0.5 * (2 * a + delta_x * (2 * i - 1))
        total_sum += f(midpoint)

    return total_sum * delta_x

def my_function(x, mu=0, sigma=1):
    l = 1/(sigma*(2*math.pi)**0.5)
    r = -0.5*((x - mu) / sigma)**2
    return l*exp(r)

a=-1
b=1
x = symbols('x')
f = my_function(x)
x_area = np.linspace(a, b, 1000)
f_area = lambdify(x, f)(x_area)
plot(f, xlim=(-5, 5), fill={'x': x_area,'y1':f_area,'color':'tomato'})
```

```{python}
def integral_function(x):
    mu = 0
    sigma = 1
    return(my_function(x, mu, sigma))
  
area = approximate_integral(a=-1, b=1, n=1000, f=integral_function)

print(area) # prints 
```

------------------------------------------------------------------------

**Assignment:** Make a short video explaining how factorization and prime numbers are used for encryption. Do proper research and use code demos.

**Stretch:** Expand your video with an exploration of the current state of quantum computing and it's expected evolution. Discuss and illustrate the implications for current encryption methodologies. Provide a list of interesting resources on the matter.

**Challenge:** Share your content online (e.g. Linkedin or Medium), gather feedback and write a reflection on it.
